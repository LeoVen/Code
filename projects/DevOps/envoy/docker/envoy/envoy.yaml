admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
    - name: main_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: api
                  virtual_hosts:
                    - name: backend
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/service1"
                          route:
                            prefix_rewrite: "/"
                            cluster: service-example-1
                        - match:
                            prefix: "/service2"
                          route:
                            prefix_rewrite: "/"
                            cluster: service-example-2
                access_log:
                  - name: envoy.access_loggers.stream
                    filter:
                      not_health_check_filter: {}
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      log_format:
                        json_format:
                          bytesReceived: "%BYTES_RECEIVED%"
                          bytesSent: "%BYTES_SENT%"
                          duration: "%DURATION%"
                          httpMethod: "%REQ(:method)%"
                          protocol: "%PROTOCOL%"
                          requestTime: "%START_TIME(%Y/%m/%dT%H:%M:%S%z)%"
                          responseFlags: "%RESPONSE_FLAGS%"
                          responseLength: "%BYTES_SENT%"
                          responseStatusDetails: "%RESPONSE_CODE_DETAILS%"
                          service: envoy-proxy
                          status: "%RESPONSE_CODE%"
                          timestamp: "%START_TIME(%s.%6f)%"
                          upstreamCluster: "%UPSTREAM_CLUSTER%"
                          upstreamPath: "%REQ(:path)%"
                          userAgent: "%REQ(user-agent)%"
                http_filters:
                  - name: envoy.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      status_on_error:
                        code: 500
                      transport_api_version: V3
                      failure_mode_allow: false # when true, if the ext_authz fails to respond, the request will be allowed through
                      grpc_service:
                        # also works
                        # google_grpc:
                        #   target_uri: opa-envoy:9191
                        #   stat_prefix: opa
                        envoy_grpc:
                          cluster_name: opa-envoy-cluster
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: service-example-1
      type: LOGICAL_DNS
      connect_timeout: 10s
      load_assignment:
        cluster_name: service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: service-example-1
                      port_value: 80
    - name: service-example-2
      type: LOGICAL_DNS
      connect_timeout: 10s
      load_assignment:
        cluster_name: service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: service-example-2
                      port_value: 80

    - name: opa-envoy-cluster
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      # for some reason, the following line is necessary
      http2_protocol_options: {}
      load_assignment:
        cluster_name: opa-envoy
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: opa-envoy
                      port_value: 9191

layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        overload:
          global_downstream_max_connections: 50000
